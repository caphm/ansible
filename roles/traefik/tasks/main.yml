- name: Create appdata directory for Traefik
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ defaultuser.uid }}"
    group: "{{ defaultuser.maingid }}"
  loop:
    - "{{ traefik_home }}"
    - "{{ certdumper_home }}"
    - "{{ ssl_path }}"
    - "{{ ssl_certs_path }}"
    - "{{ ssl_private_path }}"
    - "{{ ssl_path }}/pem"

- name: Download root CA certificate for use by other apps
  get_url:
    url: https://letsencrypt.org/certs/isrgrootx1.pem.txt
    dest: "{{ isrg_root_cert }}"

- name: Setup acme.json
  file:
    path: "{{ traefik_home }}/acme.json"
    state: touch
    owner: "{{ defaultuser.uid }}"
    group: "{{ defaultuser.maingid }}"
    mode: 0600

- name: Setup traefik.toml
  template:
    src: traefik.toml.j2
    dest: "{{ traefik_home }}/traefik.toml"
    owner: "{{ defaultuser.uid }}"
    group: "{{ defaultuser.maingid }}"
    mode: 0600
  register: traefik_config

- name: upload the certdumper Dockerfile to the docker host
  copy:
    src: "{{item}}"
    dest: "{{ certdumper_home }}"
    owner: "{{defaultuser.uid}}"
    group: "{{defaultuser.maingid}}"
    mode: 0755
  loop:
    - certdumper/Dockerfile
    - certdumper/certdumper.sh
  register: certdumper_dockerfile

- name: Start docker service traefik
  docker_compose:
    project_name: traefik
    state: present
    pull: "{{force_update}}"
    build: "{{certdumper_dockerfile.changed}}"
    restarted: "{{force_update or traefik_config.changed}}"
    definition:
      version: "3.5"
      services:
        traefik:
          image: traefik:alpine
          container_name: traefik
          hostname: traefik
          stdin_open: true
          tty: true
          restart: always
          networks:
            traefik_backend:
              ipv4_address: "{{ bridgenetworks.traefik_backend.static_ips.traefik }}"
          ports:
            - "80:80"
            - "443:443"
          volumes:
            - "{{ traefik_home }}/traefik.toml:/etc/traefik/traefik.toml"
            - "{{ traefik_home }}/acme.json:/acme.json"
            - "{{ traefik_home }}/ssl/localhost/cert.pem:/defaultcert.pem"
            - "{{ traefik_home }}/ssl/localhost/key.pem:/defaultcert_key.pem"
            - /var/run/docker.sock:/var/run/docker.sock
            - "/etc/timezone:/etc/timezone:ro"
          environment:
            - "CF_API_EMAIL={{email_address}}"
            - "CF_API_KEY={{cf_api_key}}"
          labels:
            traefik.frontend.rule: "Host:{{ traefik_host }},localhost;PathPrefixStrip:{{ traefik_dashboard_path }}"
            traefik.docker.network: "{{ bridgenetworks.traefik_backend.name }}"
            traefik.port: "8888"
            traefik.enable: "true"
            traefik.frontend.headers.SSLRedirect: "true"
            traefik.frontend.headers.browserXSSFilter: "true"
            traefik.frontend.headers.contentTypeNosniff: "true"
            traefik.frontend.headers.frameDeny: "true"

        certdumper:
          build: "{{ certdumper_home }}"
          container_name: certdumper
          hostname: certdumper
          stdin_open: true
          tty: true
          user: "{{defaultuser.uid}}:{{defaultuser.maingid}}"
          restart: always
          network_mode: none
          volumes:
            - "{{ traefik_home }}/acme.json:/traefik/acme.json:ro"
            - "{{ ssl_path }}:/traefik/ssl"
            - "/etc/timezone:/etc/timezone:ro"

      networks:
        traefik_backend:
          external:
            name: "{{ bridgenetworks.traefik_backend.name }}"
