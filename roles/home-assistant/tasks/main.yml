- name: Create appdata directories
  file:
    dest: "{{item}}"
    state: directory
    owner: "{{defaultuser.uid}}"
    group: "{{defaultuser.maingid}}"
  loop:
    - "{{hass_home}}"
    - "{{appdaemon_home}}"
    - "{{hadockermon_home}}"
    - "{{mosquitto_home}}"

# - name: Configure home-assistant
#   import_tasks: configure.yml
#   tags:
#     - conf_hass

- name: Install mosquitto configuration
  copy:
    src: "{{item}}"
    dest: "{{mosquitto_home}}/{{item}}"
    owner: "{{defaultuser.uid}}"
    group: "{{defaultuser.maingid}}"
    mode: 0644
  loop:
    - mosquitto.conf
  register: mosquitto_config

- name: Start docker app home-assistant
  docker_service:
    project_name: home-assistant
    state: present
    pull: "{{force_update}}"
    restarted: "{{force_update or mosquitto_config.changed}}"
    definition:
      version: "3.5"
      services:
        home-assistant:
          image: homeassistant/home-assistant
          container_name: home-assistant
          hostname: home-assistant
          stdin_open: true
          tty: true
          restart: always
          volumes:
            - "{{hass_home}}:/config"
          network_mode: host
          environment:
            - TZ=Europe/Berlin

        hass-relay:
          image: tynor88/socat
          container_name: hass-relay
          hostname: hass-relay
          restart: always
          networks:
            web:
              aliases:
                - home-assistant
            iot:
              ipv4_address: "{{ networks.iot.subnet.split('/')[0][:-1] }}2"
              aliases:
                - home-assistant
          environment:
            - LISTEN_PORT=8123
            - FORWARD_PORT=8123
          labels:
            traefik.enable: "true"
            traefik.frontend.rule: "Host:{{ hass_url }}"
            traefik.docker.network: "web"
            traefik.port: "8123"

        appdaemon:
          image: acockburn/appdaemon:latest
          container_name: appdaemon
          hostname: appdaemon
          stdin_open: true
          user: "{{defaultuser.uid}}:{{defaultuser.maingid}}"
          restart: always
          volumes:
            - /etc/localtime:/etc/localtime:ro
            - "{{appdaemon_home}}:/conf"
          networks:
            iot:
              ipv4_address: "{{ networks.iot.subnet.split('/')[0][:-1] }}3"
          environment:
            - "HA_URL=http://home-assistant:8123"
            - "TOKEN={{appdaemon_token}}"

        ha-dockermon:
          image: philhawthorne/ha-dockermon
          container_name: ha-dockermon
          hostname: ha-dockermon
          stdin_open: true
          tty: true
          user: "{{defaultuser.uid}}:{{defaultuser.maingid}}"
          restart: always
          volumes:
            - "{{hadockermon_home}}:/config"
            - /var/run/docker.sock:/var/run/docker.sock
          networks:
            iot:
              ipv4_address: "{{ networks.iot.subnet.split('/')[0][:-1] }}4"

        mosquitto:
          image: eclipse-mosquitto
          container_name: mosquitto
          hostname: mosquitto
          stdin_open: true
          tty: true
          user: "{{defaultuser.uid}}:{{defaultuser.maingid}}"
          restart: always
          volumes:
            - "{{ mosquitto_home }}/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
            - "{{ mosquitto_home }}/passwd:/mosquitto/passwd:ro"
            - "{{ mosquitto_home }}/data:/mosquitto/data"
            - "{{ mosquitto_home }}/log:/mosquitto/log"
            - "{{ isrg_root_cert }}:/mosquitto/certs/isrgrootx1.pem:ro"
            - "{{ private_domain_cert }}:/mosquitto/certs/cert.pem:ro"
            - "{{ private_domain_key }}:/mosquitto/certs/key.pem:ro"
          networks:
            iot:
              ipv4_address: "{{ networks.iot.subnet.split('/')[0][:-1] }}5"
          ports:
            - "8883:8883"
          environment:
            - TZ=Europe/Berlin

      networks:
        iot:
          name: iot
          driver: bridge
          ipam:
            driver: default
            config:
              - subnet: "{{networks.iot.subnet}}"
        web:
          external:
            name: web
