- name: Create appdata directories
  file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ defaultuser.uid }}"
    group: "{{ defaultuser.maingid }}"
  loop:
    - "{{ hass_home }}"
    - "{{ appdaemon_home }}"
    - "{{ hadockermon_home }}"
    - "{{ mosquitto_home }}"
    - "{{ hass_configurator_home }}"

# - name: Configure home-assistant
#   import_tasks: configure.yml
#   tags:
#     - conf_hass

- name: Install mosquitto configuration
  copy:
    src: "{{ item }}"
    dest: "{{ mosquitto_home }}/{{ item }}"
    owner: "{{ defaultuser.uid }}"
    group: "{{ defaultuser.maingid }}"
    mode: 0644
  loop:
    - mosquitto.conf
  register: mosquitto_config

- name: Start docker app home-assistant
  docker_service:
    project_name: home-assistant
    state: present
    pull: "{{ force_update }}"
    restarted: "{{ force_update or mosquitto_config.changed }}"
    definition:
      version: "3.5"
      services:
        home-assistant:
          image: homeassistant/home-assistant
          container_name: home-assistant
          hostname: home-assistant
          stdin_open: true
          tty: true
          restart: always
          volumes:
            - "{{ hass_home }}:/config"
            - "{{ hass_home }}/sucks:/usr/local/lib/python3.7/site-packages/sucks"
            - "/etc/timezone:/etc/timezone:ro"
          networks:
            web:
              aliases:
                - home-assistant
            iot:
              aliases:
                - home-assistant
          labels:
            traefik.enable: "true"
            traefik.frontend.rule: "Host:{{ hass_url }}"
            traefik.docker.network: "web"
            traefik.port: "8123"

        appdaemon:
          image: acockburn/appdaemon:latest
          container_name: appdaemon
          hostname: appdaemon
          stdin_open: true
          user: "{{ defaultuser.uid }}:{{ defaultuser.maingid }}"
          restart: always
          volumes:
            - "{{ appdaemon_home }}:/conf"
            - /etc/localtime:/etc/localtime:ro
          networks:
            - iot
          environment:
            - "HA_URL=http://home-assistant:8123"
            - "TOKEN={{ appdaemon_token }}"

        hass-configurator:
          image: "causticlab/hass-configurator-docker:x86_64"
          container_name: hass-configurator
          hostname: hass-configurator
          restart: always
          volumes:
            - "{{ hass_configurator_home }}:/config"
            - "{{ hass_home }}:/hass-config"
            - "/etc/timezone:/etc/timezone:ro"
          networks:
            web:
              aliases:
                - hass-configurator
          labels:
            traefik.enable: "true"
            traefik.frontend.rule: "Host:{{ hass_url }};PathPrefixStrip:{{ hass_configurator_path }}"
            traefik.frontend.auth.basic: caphm:$$2y$$05$$H2zMRdFcjXPGrEzsWWErT.ASda0DmeVjWLsBe/p9l2WdeInMqk.Zq
            traefik.docker.network: "web"
            traefik.port: "3218"

        ha-dockermon:
          image: philhawthorne/ha-dockermon
          container_name: ha-dockermon
          hostname: ha-dockermon
          stdin_open: true
          tty: true
          restart: always
          volumes:
            - "{{ hadockermon_home }}:/config"
            - /var/run/docker.sock:/var/run/docker.sock
            - "/etc/timezone:/etc/timezone:ro"
          networks:
            iot:
              ipv4_address: 172.18.20.101

        mosquitto:
          image: eclipse-mosquitto
          container_name: mosquitto
          hostname: mosquitto
          stdin_open: true
          tty: true
          user: "{{ defaultuser.uid }}:{{ defaultuser.maingid }}"
          restart: always
          volumes:
            - "{{ mosquitto_home }}/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
            - "{{ mosquitto_home }}/passwd:/mosquitto/passwd:ro"
            - "{{ mosquitto_home }}/data:/mosquitto/data"
            - "{{ mosquitto_home }}/log:/mosquitto/log"
            - "{{ isrg_root_cert }}:/mosquitto/certs/isrgrootx1.pem:ro"
            - "{{ private_domain_cert }}:/mosquitto/certs/cert.pem:ro"
            - "{{ private_domain_key }}:/mosquitto/certs/key.pem:ro"
            - "/etc/timezone:/etc/timezone:ro"
          networks:
            - iot
          ports:
            - "1883:1883"
            - "8883:8883"

      networks:
        iot:
          external:
            name: iot
        web:
          external:
            name: web
